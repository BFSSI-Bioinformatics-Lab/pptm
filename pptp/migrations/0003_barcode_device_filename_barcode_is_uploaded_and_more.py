# Generated by Django 5.0.9 on 2024-10-29 19:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("pptp", "0002_product_has_multiple_barcodes_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="barcode",
            name="device_filename",
            field=models.CharField(
                blank=True,
                help_text="Original filename from device camera",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="barcode",
            name="is_uploaded",
            field=models.BooleanField(
                default=True,
                help_text="Whether the image has been uploaded to the server",
            ),
        ),
        migrations.AddField(
            model_name="barcode",
            name="notes",
            field=models.TextField(blank=True, help_text="Any additional notes"),
        ),
        migrations.AddField(
            model_name="ingredients",
            name="device_filename",
            field=models.CharField(
                blank=True,
                help_text="Original filename from device camera",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="ingredients",
            name="is_uploaded",
            field=models.BooleanField(
                default=True,
                help_text="Whether the image has been uploaded to the server",
            ),
        ),
        migrations.AddField(
            model_name="nutritionfacts",
            name="device_filename",
            field=models.CharField(
                blank=True,
                help_text="Original filename from device camera",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="nutritionfacts",
            name="is_uploaded",
            field=models.BooleanField(
                default=True,
                help_text="Whether the image has been uploaded to the server",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="is_offline",
            field=models.BooleanField(
                default=False,
                help_text="Whether this product was created in offline mode",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="offline_id",
            field=models.CharField(
                blank=True,
                help_text="Unique identifier for offline submissions",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="productimage",
            name="device_filename",
            field=models.CharField(
                blank=True,
                help_text="Original filename from device camera",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="productimage",
            name="is_uploaded",
            field=models.BooleanField(
                default=True,
                help_text="Whether the image has been uploaded to the server",
            ),
        ),
        migrations.AlterField(
            model_name="barcode",
            name="barcode_image",
            field=models.ImageField(
                blank=True,
                help_text="Image of the product barcode",
                null=True,
                upload_to="barcodes/",
            ),
        ),
        migrations.AlterField(
            model_name="barcode",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="pptp.product"
            ),
        ),
        migrations.AlterField(
            model_name="ingredients",
            name="image",
            field=models.ImageField(
                blank=True,
                help_text="Image of the ingredients list",
                null=True,
                upload_to="ingredients/",
            ),
        ),
        migrations.AlterField(
            model_name="ingredients",
            name="notes",
            field=models.TextField(blank=True, help_text="Any additional notes"),
        ),
        migrations.AlterField(
            model_name="ingredients",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="pptp.product"
            ),
        ),
        migrations.AlterField(
            model_name="nutritionfacts",
            name="image",
            field=models.ImageField(
                blank=True,
                help_text="Image of the nutrition facts table",
                null=True,
                upload_to="nutrition_facts/",
            ),
        ),
        migrations.AlterField(
            model_name="nutritionfacts",
            name="notes",
            field=models.TextField(blank=True, help_text="Any additional notes"),
        ),
        migrations.AlterField(
            model_name="nutritionfacts",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="pptp.product"
            ),
        ),
        migrations.AlterField(
            model_name="productimage",
            name="image",
            field=models.ImageField(
                blank=True,
                help_text="Product image",
                null=True,
                upload_to="product_images/",
            ),
        ),
        migrations.AlterField(
            model_name="productimage",
            name="notes",
            field=models.TextField(blank=True, help_text="Any additional notes"),
        ),
        migrations.AlterField(
            model_name="productimage",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="pptp.product"
            ),
        ),
        migrations.AddConstraint(
            model_name="barcode",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("barcode_image__isnull", False), ("is_uploaded", True)),
                    models.Q(
                        ("device_filename__isnull", False), ("is_uploaded", False)
                    ),
                    _connector="OR",
                ),
                name="barcode_image_or_device_filename_required",
            ),
        ),
        migrations.AddConstraint(
            model_name="ingredients",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("image__isnull", False), ("is_uploaded", True)),
                    models.Q(
                        ("device_filename__isnull", False), ("is_uploaded", False)
                    ),
                    _connector="OR",
                ),
                name="ingredients_image_or_device_filename_required",
            ),
        ),
        migrations.AddConstraint(
            model_name="nutritionfacts",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("image__isnull", False), ("is_uploaded", True)),
                    models.Q(
                        ("device_filename__isnull", False), ("is_uploaded", False)
                    ),
                    _connector="OR",
                ),
                name="nutrition_image_or_device_filename_required",
            ),
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_offline", True)),
                fields=("created_by", "offline_id"),
                name="unique_offline_id_per_user",
            ),
        ),
        migrations.AddConstraint(
            model_name="productimage",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("image__isnull", False), ("is_uploaded", True)),
                    models.Q(
                        ("device_filename__isnull", False), ("is_uploaded", False)
                    ),
                    _connector="OR",
                ),
                name="product_image_or_device_filename_required",
            ),
        ),
    ]
